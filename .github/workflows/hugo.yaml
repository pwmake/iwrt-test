name: Generate Hugo site


on:
  workflow_dispatch:
    # inputs:
    #   luci_version:
    #     description: 'specify a luci version to build'
    #     required: false
    #     default: '24.10.3'
    

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@main
        with:
          ref: main

      - name: retrieve hugo theme even
        run: |
          echo "start to retrieve hugo theme even"
          git clone https://github.com/olOwOlo/hugo-theme-even themes/even

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: enhance layout to support mermaid
        run: |
          echo "start to enhance layout to support mermaid"
          mkdir -pv themes/even/layouts/_markup && \
             cp -v ./layout_enhancement/render-codeblock-mermaid.html ./themes/even/layouts/_markup/render-codeblock-mermaid.html
          cat ./layout_enhancement/scripts.html >> themes/even/layouts/partials/scripts.html

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Create directory for user-specific executable files
        run: |
          mkdir -p "${HOME}/.local"
      - name: Install Dart Sass
        run: |
          curl -sLJO "https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"
          tar -C "${HOME}/.local" -xf "dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"
          rm "dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"
          echo "${HOME}/.local/dart-sass" >> "${GITHUB_PATH}"
      - name: Install Hugo
        run: |
          curl -sLJO "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          mkdir "${HOME}/.local/hugo"
          tar -C "${HOME}/.local/hugo" -xf "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          rm "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          echo "${HOME}/.local/hugo" >> "${GITHUB_PATH}"
      - name: Verify installations
        run: |
          echo "Dart Sass: $(sass --version)"
          echo "Go: $(go version)"
          echo "Hugo: $(hugo version)"
          echo "Node.js: $(node --version)"
      - name: Install Node.js dependencies
        run: |
          [[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true
      - name: Configure Git
        run: |
          git config core.quotepath false
      - name: Cache restore
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: hugo-${{ github.run_id }}
          restore-keys:
            hugo-
      - name: Build the site
        run: |
          hugo \
            --gc \
            --minify \
            --cacheDir "${{ runner.temp }}/hugo_cache"
      - name: Cache save
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}

      - name: Build hugo site
        run: |
          echo "start to build hugo site"
          hugo --minify

      - name: Commit generated site to branch output
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'output'
          commit-message: 'publish'
          force-add: 'true'
          files: ./public/**
          name: GitHub Actions
          email: jf@local.com

      - run: echo "üçè This job's status is ${{ job.status }}."

  # release:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     # create a release based on a file from runner workspace 
  #     - name: Create Release
  #       uses: softprops/action-gh-release@v2.4.0
  #       with:
  #         tag_name: IWRT-builder
  #         files: |
  #           ${{ github.workspace }}/bin/targets/x86/64/*squashfs-combined-efi.img.gz
  #         body_path: ${{ github.workspace }}/release_notes.md
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

